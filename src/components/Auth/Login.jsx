import React, { useState } from "react";
import { Link, useNavigate } from "react-router-dom";
import styles from "./auth.module.css"; // Import the CSS module

// Imports the Amplify library from 'aws-amplify' package. This is used to configure your app to interact with AWS services.
import { Amplify } from "aws-amplify";

// Imports the Authenticator and withAuthenticator components from '@aws-amplify/ui-react'.
// Authenticator is a React component that provides a ready-to-use sign-in and sign-up UI.
// withAuthenticator is a higher-order component that wraps your app component to enforce authentication.
import { Authenticator, withAuthenticator } from "@aws-amplify/ui-react";

// Imports the default styles for the Amplify UI components. This line ensures that the authenticator looks nice out of the box.
import "@aws-amplify/ui-react/styles.css";

// Imports the awsExports configuration file generated by the Amplify CLI. This file contains the AWS service configurations (like Cognito, AppSync, etc.) specific to your project.
import awsExports from "./../../aws-exports";

// Imports the Quiz component from Quiz.js for use in this file.
// import Quiz from './Quiz';

// Configures the Amplify library with the settings from aws-exports.js, which includes all the AWS service configurations for this project.
Amplify.configure(awsExports);

const Login = ({ onLogin }) => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    email: "",
    password: "",
  });

  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    const storedUser = JSON.parse(localStorage.getItem("user"));

    if (
      storedUser &&
      storedUser.email === formData.email &&
      storedUser.password === formData.password
    ) {
      onLogin(storedUser);
      navigate("/user-dashboard");
    } else {
      alert("Invalid login credentials");
    }
  };

  return (
    <div className={styles["auth-container"]}>
      <div className="App">
        <Authenticator>
          {({ signOut }) => (
            <main>
              <header className="App-header">
                {/* Quiz Component */}
                {/* <Quiz /> */}
                {/* Sign Out Button */}
                <button
                  onClick={signOut}
                  style={{
                    margin: "20px",
                    fontSize: "0.8rem",
                    padding: "5px 10px",
                    marginTop: "20px",
                  }}
                >
                  Sign Out
                </button>
              </header>
            </main>
          )}
        </Authenticator>
      </div>

      {/* <h2>Login</h2>
      <form onSubmit={handleSubmit}>
        <input
          type='email'
          name='email'
          placeholder='Email'
          required
          onChange={handleChange}
        />
        <input
          type='password'
          name='password'
          placeholder='Password'
          required
          onChange={handleChange}
        />
        <button type='submit' className={styles['btn']}>
          Sign In
        </button>
      </form>

      <p className={styles['switch-auth']}>
        Don't have an account? <Link to='/register'>Sign Up</Link>
      </p> */}
    </div>
  );
};

export default Login;
